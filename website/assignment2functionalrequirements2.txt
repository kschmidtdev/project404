<p><strong>Name:</strong> Accessing party status </p><p><strong>Description:</strong> The user must navigate the world map menu to access party status. </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>1. Selection: Press the menu button to bring up the menu </p><p>2. Selection: Navigate to the &quot;Party Status&quot; button, and press the button. </p><p>Abnormal: </p><p>1. Selection: User selects menu item that is not Party Status </p><p>2. Selection: Select back or cancel, and go back to menu. Try again. </p><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Button </li><li>Menu </li><li>Database (unit modified) </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Choosing the wrong option (go back and try again) </li></ul><p><strong>Actor:</strong> </p><p><i>Max:</i> Ah the party status screen. Max&#x27;s bread and butter. Max loves to set up his characters and their abilities as best as possible, so to Max this option is the holy grail of tactics games. He is likely to spend much time in here, pouring over stats and setting up parties, as such he knows how to access it easily. </p><p><i>Hubert:</i> The party status screen is definitely infinitely more difficult for Hubert than for Max. Hubert doesn&#x27;t want to have to learn these things, and is quickly overwhelmed by the options available to him here.  </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Name:</strong> Party Status </p><p><strong>Description:</strong> The user must be able to set their starting member roster, and equip their units with items. </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>Case Party Setup: </p><p>1. Selection: Move the cursor onto a unit and press button </p><p>2. Selection: In sub menu, select option (Include in party) </p><p>Abnormal: </p><p>1. Selection: User selects too many to be in party </p><p>2. Selection: User receives warning message, that too many members are in party, to either de-select a member or not add a new one. </p><p>3. Selection: Do nothing if not adding, otherwise, select a character that is in party (noted by highlight) and press button. </p><p>4. Selection: In sub menu, select option (remove from party). <ul><li><i>Note if the user tries to remove all members from party a similar warning will be produced to warn them</i> </li></ul></p><p>Case Unit Item Selection: </p><p>1. Selection: Move the cursor onto a unit and press button </p><p>2. Selection: In sub menu, select option (Set Items) </p><p>3. Selection: From items menu, select the item you wish to change (from the unit), with the item you wish to use (from the repository). </p><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Menu </li><li>Items </li><li>Button </li><li>Units </li><li>Database </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Choosing too many or too few party members (error message generated) </li></ul><p><strong>Actor:</strong> </p><p><i>Max:</i> Max will spend many a meticulous hour working through his party status, and realizing his true dream team. It is imperative for him to be able to glean as much information as possible from the content. He wants a simplified interface, yet lots of information. Additionally he needs the to use the items </p><p><i>Hubert:</i> Hubert will need to use the party screen to set up his party, but he really wants to avoid the other work. Although he may set parties, he is unlikely to spend much time comparing stats and items. He would prefer a simple intuitive way to do this, without being bogged down by heavy text and stats. </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Name:</strong> Entering Battle </p><p><strong>Description:</strong> The user must navigate a map, and join (move to) a conflict denoted by a red mark. </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>1. Selection: Move the cursor to toward the contested point </p><p>2. Movement: By selecting the node, the character will move to this point  </p><p>Abnormal: </p><p>1. Selection: User selects node that is not contested </p><p>2. Movement: No action results, user continues movement </p><p>3. Arrival: When arriving at the correct node, the instance will start. </p><p>Abnormal 2: </p><p>1. Selection: User selects an area on the map where no nodes or roads exist </p><p>2. Movement: No movement occurs until a valid movement is proposed. </p><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Movement </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Choosing the wrong position (movement but no instance) </li><li>Choosing an invalid position (no movement and no instance) </li></ul><p><strong>Actor:</strong> </p><p><i>Max:</i> Max knows what an instance of battle is, and he knows how to join them. It&#x27;s necessary and he&#x27;s ready to go. </p><p><i>Hubert:</i> Hubert doesn&#x27;t really understand how the battles work, but he knows where a action instance is, by the large red marker on the screen. He knows that there has to be a battle somewhere so he knows where to go. </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Name:</strong> In Game Status </p><p><strong>Description:</strong> The user must enter the in Game Status menu(battlefield), view current statistics of units </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>1. Selection: Press the select button </p><p>2. Selection: Side menu shows listing of all characters on field with basic info. Selecting a unit brings up submenu. </p><p>3. Selection: Submenu displays further information, button press exits menu </p><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Menu </li><li>Button </li></ul><p><strong>Exceptions:</strong> </p><blockquote>N/A 

</blockquote><p><strong>Actor:</strong> </p><p><i>Max:</i> To Max the in game status is imperative to his analysis of the current in game situation. By having it easily mapped to a single button, Max can quickly scan his team&#x27;s statistics, and, if needed, get more in depth information at the click of a button. He is likely to utilize this menu extensively while planning his next move. </p><p><i>Hubert:</i> Hubert has never really needed to know too much about his units. Knowing their basic health and power was usually enough to satiate his need for tactical play. He generally prefers to use the big and powerful looking characters, and finds stats to be boring. At least the stats menu isn&#x27;t obtrusive to his game play. </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Name:</strong> Moving </p><p><strong>Description:</strong> The user must navigate the tactical map, aided by the tutorial mechanism </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>Ordinary Usage: </p><p>1. Selection: Select an allied character </p><p>2. Movement: Move the cursor within the movement range of the character (denoted by bordered box) </p><p>3. Commit: Use the action button to move the unit to the spot at the cursor. </p><p>Abnormal 1: </p><p>1. Selection: Selecting ground </p><p>2. Selection: User cannot select ground, only allowed to select unit </p><p>Abnormal 2: </p><p>1. Selection: Select an allied character. </p><p>2. Movement: Move character outside the allowable movement area (not allowed). </p><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Button </li><li>Tiles </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Selecting ground (no effect) </li><li>Trying to move to invalid position (restricted to movement area of unit only) </li></ul><p><strong>Actor:</strong> </p><p><i>Max:</i> Max understands the basic mechanics of movement, and really only wants to know where his units can and cannot move to. By allowing him to view the area of movement, Max is able to better plan his attack. </p><p><i>Hubert:</i> Hubert may not be able to easily understand the movement pane, but he finds it useful because it restricts his cursor only to squares he can legitimately move to. </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Short Name:</strong> Attacking </p><p><strong>Informal Description:</strong> During the course of the game, the user will have to be able to get their character into a position where they may attack an opponent character. </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Cases:</strong>  </p><h3></h3><p><i>Casual Gamer:</i>  </p><p>1. Selection: Player selects his/her own unit </p><p>2. Choose Target: Player uses cursor and places it over opponent before accepting. </p><p>3. Selects Weapon: Player navigates menu, selects appropriate weapon. </p><p>4. Attacks: Player affirms attack action. </p><h3></h3><p><i>&quot;Hardcore&quot; Gamer:</i> </p><p>1. Check Skills: Player checks character statistics before choosing target. </p><p>2. Check Opponent Skills: Player checks opponent statistics by placing cursor over opposing character. </p><p>3. Selection: Deciding it is a good move, player selects his/her own character. </p><p>4. Choose Target: Selects character he/she planned to attack with cursor. </p><p>5. Selects Weapon: Player navigates menu, selects appropriate weapon. </p><p>6. Attacks: Player affirms attack action. </p><h3></h3><p><i>&quot;Newbie&quot; Gamer</i>: </p><p>Ordinary: </p><p>1. Selection: Player selects his/her own unit </p><p>2. Choose Target: Player uses cursor and places it over opponent before accepting. </p><p>3. Selects Weapon: Player navigates menu, selects appropriate weapon. </p><p>4. Attacks: Player affirms attack action. </p><p>Abnormal 1: </p><p>1. Selection: Player selects a unit not their own </p><p>2. Re-Selection: Interface does not allow selection of opposing units, player reselects </p><p>3-5 Continue as normal </p><p>Abnormal 2: </p><p>1. Selection: Player selects his/her own unit </p><p>2. Choose Target: Player uses cursor and places it over ally or blank ground. </p><p>Stem:  </p><p>3i: Player has selected ground, this will only be allowed if attack is Area of Effect (attack damages more than one space, and may still be effective) </p><p>3ii: Player has selected ally, attack will only be allowed if &quot;healing&quot;. </p><p>4-5 Continue as normal </p><h3></h3><p><strong>Features Used:</strong> </p><ul><li>Cursor (and associated controls) </li><li>Selection button </li><li>Information button </li><li>Details menu </li><li>Weapons menu </li><li>Weapon/Spell </li></ul><p><strong>Exceptions:</strong> <ul><li>If a user selects the wrong unit or a unit who has already had it&#x27;s turn, the game will not allow selection.  </li><li>If a user tries to attack an ally, it will only be allowed if a healing ability if invalid, will wait until user selects proper target </li><li>If a user tries to attack ground, it will only be allowed for an area of effect attack if invalid, will wait until user selects proper target </li><li>Unusable weapons for selection will be greyed out, and attempts to use these weapons will not be allowed, waits for proper input. </li></ul></p><p><strong>Actor:</strong> </p><p><i>Max:</i> To Max this is all second nature. Using area of effect spells is something common in most tactics games, and in fact, using them on open ground does have benefits, including avoiding his own units, or hitting more of the opponents units. Although he may need to figure out which ways to best utilize this ability, he is likely to understand the gist of the games attack mechanics easily and early on. </p><p><i>Hubert:</i> Hubert finds the attack mechanics confusing. How come his archer can only attack units while his mage can hit open ground. He feels that the system allows him to make more errors than it should. Although generally manageable, he does require more guidance in this area to effectively utilize the attacking mechanic.  </p><p><strong>Screen Mockup</strong> </p><h3></h3><p><strong>Name:</strong> Saving </p><p><strong>Description:</strong> Once the battle has ended, the user must save from the overmap </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>Ordinary Usage: </p><p>1. Menu: Access the menu by pressing the menu button </p><p>2. Selection: Select the save option </p><p>3. Selection: In the save menu select an empty space. </p><p>Abnormal Usage: </p><p>1. Menu: Access the menu by pressing the menu button </p><p>2. Selection: Select the save option </p><p>3. Selection: Select already in use save slot </p><p>4. Input: Answer with button on Yes overwrite or No do not. </p><p>Abnormal Usage 2: </p><p>1. Menu. Access the menu by pressing the menu button </p><p>2. Selection: Select improper action. </p><p>3. Selection: Choose cancel and go back to main menu. </p><p>4. Selection: Select proper option. </p><p>5. Selection: In the save menu select an empty space. </p><h3></h3><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Action button </li><li>World Map Menu </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Selecting improper button (simply go back and choose correct) </li><li>Overwriting files (ask if they are sure) </li></ul><p><strong>Actor:</strong> </p><p><i>Max:</i> Max knows and utilizes saving as a given. </p><p><i>Hubert:</i> Hubert will know to save, but he may need to learn how to reach the save menus so as to use them. </p><p><strong>Screen Mockups:</strong> </p><h3></h3><p><strong>Name:</strong> Quitting </p><p><strong>Description:</strong> The user wishes to exit the game from the main map </p><p><strong>Actors:</strong> ALL </p><p><strong>Use Case:</strong> </p><h3></h3><p>Ordinary Usage: </p><p>1. Menu: Press menu button to access the menu. </p><p>2. Selection: Select the quit option. </p><p>3. Selection: Select Yes when asked if they are sure. </p><p>Abnormal Usage: </p><p>1. Menu: Press menu button to access the menu. </p><p>2. Selection: Select the quit option. </p><p>3. Mistake: Select No to go back to game. </p><h3></h3><p><strong>Features Used:</strong> </p><ul><li>Selection Cursor </li><li>Action button </li><li>World Map menu </li></ul><p><strong>Exceptions:</strong> </p><ul><li>Selecting No, back to map </li></ul><p><strong>Actor:</strong> </p><p><i>All:</i> </p><p>Quitting is intuitive and imperative in operation for both users. Since it is easily identifiable on the menus, it should be simple to apply. </p><p><strong>Screen Mockups:</strong> </p><h3></h3>
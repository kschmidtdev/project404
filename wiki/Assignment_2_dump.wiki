#summary Place to put ideas/completed-paragraphs on assignment 2


= Guidelines =
 * The software will be written in C++
 * The renderer, and input will use the SDL
 * User profiles will be encrypted for protection
 * Game archives (data and database, if they are separate) will be encrypted for protection and integrity assurance
 * Our game will not be a clone or copy of the gameplay found in another game title
 * Our game will not include or use media or trademarks not legally licensed to us

= Data Requirements =
 * Input information from keyboard, joystick directional pad and joystick buttons
 * Database stored in a XML document which will on deployment exist in an encrypted form, and will be decrypted on the fly
 * Read JPG textures
 * Read PNG textures

= Feature Priority List =

== Game ==
 * Simple background music
 * Sound effects (for actions)
 * particle/pixel animations to indicate actions (attack, magic, item, etc.)
 * Item store
 * Turn-based combat
 * Logging system
 * Simple configuration file parsing
 * Keyboard, joystick input handling
 * Computer AI (first level, does something)
 * Computer AI (second level, actually seems to do intelligent things)
 * Computer AI (third level, actually challenging)
 * Enemies
 * Items
 * Tile-map movement (certain tiles are impassable, take longer to cross, etc)
 * Store/Load savegames
 * Store/Load gamestates (like in the middle of a battle)

== UI ==
 * Animations during battles
 * Main menu
 * Over-map
 * Battle map
 * Tile-map rendering (20x16 tiles at a time)
 * Dynamic sizes of tile-map rendering (not all tile-maps have to be the same size)
 * Mini-map during battle map
 * Password entering/setting screens
 * Intro screens (Team404, etc)
 * Fading in/out textures
 * Scrolling text-boxes (for dialog, press a button/key to progress)
 * Item store interface

== Security ==
 * Encrypt an incoming file, output to another file
 * Decrypt an incoming file to memory
 * Password verification (hash incoming password and compare against a stored hashed password)

== Database ==
 * Load an XML document into a lightweight graph structure
 * Save a lightweight graph structure into an XML document
 * Supports look-ups (fast)
 * Search functionality for specific data
 * Support range query functionality (eg. get item with attribute from one range to another)
 * Store history of character's moves

_Version 1_

_Version 2_

_Version 3_

= Functional Requirements =

== List of Actors ==
===Casual Gamer===

Goals: To play through a video game at their own pace, the casual gamer hopes to enjoy the game as much for its story line as he/she does for its in game play mechanics. The casual gamer is unlikely to play games for hours on end, and is likely to pick up and put down a game multiple times before finishing it. Usually they are unconcerned about gaining every attribute, and finding every rare thing, and are most likely to follow a linear and unending path to the end.

Abilities: Generally have a decent understanding of how games work, and if they do not understand, are able to learn relatively easily (through instruction). Usually have more patience than other gamers and are more likely to carry through and finish a game. Additionally are not afraid to seek out "help" and are more likely to search through FAQs or other information to ensure their experience proceeds unhindered.


==="Hardcore" Gamer===

Goals: To complete a video game in the shortest time, with the most skills and abilities they can amass. Wish to do the absolute best in a game, before others, and without aid or outside influence. Dedicate large consecutive hours towards a game not only until the game is finished, but also only until they have assured themselves they have done everything, and have "spec'd" (made the abilities of their character the most potent). Even then "Hardcore" gamers may stick around to show off their skills. 

Abilities: Generally have an encyclopedic knowledge of the game and it's minute facets. Having studied previous games in the series, and likely, having played other games in the genre, consider themselves specialists and elite. Have a low tolerance for hindrance, bugs or general slow downs in a game. Usually have little to no care about the plot, as it is only a means to an ends in the game.

 
===Role Playing Gamer===

Goals: To play through the game from start to end, with attention paid mainly to the advancement of plot and characters. Generally role players are more interested in gleaning all possible dialog from the game, and wish to "immerse" themselves in the game's flow, versus treating it as a means to an ends (see Hardcore gamer). Expect to gain a satisfying experience through playing through a story, and expect the story to have some complexity and interest. Usually are expecting to unlock special characters, and generally have a favorite character.

Abilities: Wide range of abilities, from poor to exceptional, but are generally willing to learn a game if it allows them to get into the storyline (generally form opinions of this early). Usually are able to find many secrets through dialog with other characters, and are constantly analyzing the story at hand and the hints non-player characters (NPC's) may drop.

 
==="Newbie" Gamer===

(newbie means a player new to the genre, game or both)

Goals: To learn a new game and to try and gain experience in how it works and what are the best options. Generally unconcerned about asking for information, they wish only to gain the best experience with the software at hand. Generally Newbie's have high expectations of games and hope to become better at them through time. 

Abilities: Usually have a strong sense of enthusiasm and start at a game with great gusto. Additionally, they are more likely to try out new things, and question how the game works as a whole. Their best abilities (in testing purposes) is their relatively new nature to the game, which gives great insight into UI and game design through their interactions with the game.

=== ===
== Usage Scenarios for Major Features ==
=== ===
*Short Name:* Attacking

*Informal Description:* During the course of the game, the user will have to be able to get their character into a position where they may attack an opponent character.

*Actors:* ALL

*Use Cases:* 
=== ===

_Casual/RPG Gamer:_ 

1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over opponent before accepting.

3. Selects Weapon: Player navigates menu, selects appropriate weapon.

4. Attacks: Player affirms attack action.
=== ===

_"Hardcore" Gamer:_

1. Check Skills: Player checks character statistics before choosing target.

2. Check Opponent Skills: Player checks opponent statistics by placing cursor over opposing character.

3. Selection: Deciding it is a good move, player selects his/her own character.

4. Choose Target: Selects character he/she planned to attack with cursor.

5. Selects Weapon: Player navigates menu, selects appropriate weapon.

6. Attacks: Player affirms attack action.
=== ===

_"Newbie" Gamer_:

  * Ordinary:

1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over opponent before accepting.

3. Selects Weapon: Player navigates menu, selects appropriate weapon.

4. Attacks: Player affirms attack action.


  * Abnormal 1:

1. Selection: Player selects a unit not their own

2. Re-Selection: Interface does not allow selection of opposing units, player reselects

3-5 Continue as normal


  * Abnormal 2:
1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over ally or blank ground.

Stem: 
3i: Player has selected ground, this will only be allowed if attack is Area of Effect (attack damages more than one space, and may still be effective)

3ii: Player has selected ally, attack will only be allowed if "healing".

4-5 Continue as normal
=== ===

*Features Used:*
  * Cursor (and associated controls)
  * Selection button
  * Information button
  * Details menu
  * Weapons menu
  * Weapon/Spell
*Exceptions:*
  * If a user selects the wrong unit or a unit who has already had it's turn, the game will not allow selection. 
  * If a user tries to attack an ally, it will only be allowed if a healing ability if invalid, will wait until user selects proper target
  * If a user tries to attack ground, it will only be allowed for an area of effect attack if invalid, will wait until user selects proper target
  * Unusable weapons for selection will be greyed out, and attempts to use these weapons will not be allowed, waits for proper input.

*Screen Mockup*

=== ===

*Short Name:* Entering text into a text-field

*Informal Description:* In the game there will be points where you will be asked to enter text, like creating a name for your profile or a name for a character. 

*Actors:* ALL

*Use Cases:* 
=== ===

_ALL Actors:_ 

 # Evaluation: The player is views the screen featuring a text-field, an alphabet, the numbers 0 - 9, and short instructions (press this button for caps, to erase, etc).
 # Choose character: Player moves selection by pressing keys or using a joystick directional pad.
 # Selects character: Player presses corresponding key/button to choose the currently-highlighted character.
 # Repeat previous steps until complete: Player is ready to finish, presses corresponding key to continue.
 # Decide if really done: Player is presented with an "are you sure" message showing their characters chosen, different button than previous is required to be pressed (to prevent accidents).
=== ===

  * Abnormal 1:

 # Correcting a mistake: Player presses corresponding key/button to erase the rightmost entered character.
 # Continue as normal to 4.

=== ===

*Features Used:*
  * Cursor (and associated controls)
  * Choose button
  * Erase button
  * Caps button
  * Accept button
  * Accept/Cancel dialog
  * Text-entry screen
*Exceptions:*
  * The user will be allowed to enter a maximum of 16 characters.

*Screen Mockup*
=== ===

Insert crap here
=== ===
*Short Name:*

*Informal Description:*

*Actors:*

*Use Cases:*

*Features Used:*

*Exceptions:*

*Screen Mockup:*
=== ===
= Ideas for Use Cases/Scenarios =

Insert different crap here























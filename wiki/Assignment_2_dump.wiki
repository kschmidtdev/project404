#summary Place to put ideas/completed-paragraphs on assignment 2


= Guidelines =
 * The software will be written in C++
 * The renderer, and input will use the SDL
 * User profiles will be encrypted for protection
 * Game archives (data and database, if they are separate) will be encrypted for protection and integrity assurance
 * Our game will not be a clone or copy of the gameplay found in another game title
 * Our game will not include or use media or trademarks not legally licensed to us

= Data Requirements =
 * Input information from keyboard, joystick directional pad and joystick buttons
 * Database stored in a XML document which will on deployment exist in an encrypted form, and will be decrypted on the fly
 * Read JPG textures
 * Read PNG textures

= Feature Priority List =

== Version 1 Features ==

=== Game ===
 * Simple background music 1
 * Turn-based combat 1
 * Logging system 1
 * Simple configuration file parsing 1
 * Keyboard, joystick input handling 1
 * Computer AI (first level, does something) 1
 * Enemies 1
 * Items 1
 * Tile-map movement 1
 * Characters with different classes (4) 1
=== UI ===
 * Indicator of actions (visual) during battles 1
 * Main menu 1
 * Over-map 1
 * Battle map 1
 * Tile-map rendering (20x16 tiles at a time) 1
 * Password entering/setting screens 1 (mockup)
 * Security
 * Password verification (hash incoming password and compare against a stored hashed password) 1
=== Database ===
 * Load an XML document into a lightweight graph structure 1
 * Supports look-ups (fast) 1

== Version 2 Features ==

=== Game ===
 * Computer AI (second level, actually seems to do intelligent things) 2
 * Tile-map weights (certain tiles are impassable, take longer to cross, etc) 2
 * Store/Load savegames 2
=== UI ===
 * Dynamic sizes of tile-map rendering (not all tile-maps have to be the same size) 2
 * Scrolling text-boxes (for dialog, press a button/key to progress) 2
=== Security ===
 * Encrypt an incoming file, output to another file 2
 * Decrypt an incoming file to memory 2
=== Database ===
 * Save a lightweight graph structure into an XML document 2
 * Search functionality for specific data 2
 * Support range query functionality (eg. get item with attribute from one range to another) 
 * Template system for creating items and characters 2

== Version 3 Features ==

=== Game ===
 * Item store (shopping) 3
 * Computer AI (third level, actually challenging) 3
 * Store/Load gamestates (like in the middle of a battle) 3
=== UI ===
 * Animations during battles 3
 * Mini-map during battle map 3
 * Intro screens (Team404, etc) 3
 * Fading in/out textures 3
 * Item store interface 3
 * Refine battle screen UI 3
=== Database ===
 * Store history of character's moves 3

= Game Mechanics =

Questions we should ask ourselves:

What kind of turn Based?:

Player - turn based (Chess)
Game piece - Turn based 

How are we going to differentiate our characters?
How are these attributes which differentiate these characters be assigned?

How many characters will each profile have?
How many people on screen?
How are the characters created?


How does the world map work?


How big in scope and what features will be in

= Menu Operations =

_This is something that I think should be in the design documentation, but is not currently in assignment outline:  _


What options exist for (detailed descriptions):
  * Main Menu
  * Battle Menu
  * World Map

(This is obvious, but it needs to be described)

== Main Menu ==

 * Create New Game
 * Load Saved Game
 * Credits
 * Options
 * Exit

== World Map ==
 * Explore (move to adjacent spot on map)
 * Visit City (in which there will be Shop, Inn, etc.)
 * Load/Save Profile
 * Party Menu (to adjust 'things' about your party: equip, etc.)
 * Exit 

== Action Menu ==
_(menu of actions that game piece possesses in battle)_

 * Move
 * Attack
 * Magic
 * Item
 * Sacrifice :P
 * ???




=== ===

*Features Used:*
  * Cursor (and associated controls)
  * Choose button
  * Erase button
  * Caps button
  * Accept button
  * Accept/Cancel dialog
  * Text-entry screen
*Exceptions:*
  * The user will be allowed to enter a maximum of 16 characters.

*Screen Mockup*

http://www.sfu.ca/~karls/CMPT275/textentrymockup.jpg

=== ===

Insert crap here
=== ===
*Short Name:*

*Informal Description:*

*Actors:*

*Use Cases:*

*Features Used:*

*Exceptions:*

*Screen Mockup:*
=== ===
= Ideas for Use Cases/Scenarios =

Insert different crap here



















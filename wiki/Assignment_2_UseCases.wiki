#summary Are use-cases dumping ground



= Functional Requirements =

== List of Actors ==
===Casual Gamer===

Casey Casual

 

Profile: Casey plays through a video game at his own pace.  Casey's primary object is to enjoy the game as much for its story line as much as game play mechanics. The casual gamer is unlikely to play games for hours on end, and is likely to pick up and put down a game multiple times before finishing it. Usually they are unconcerned about gaining every attribute, and finding every rare thing, and are most likely to follow a linear and unending path to the end.??????

Abilities: She has a decent understanding of how games work, and if she does not understand, she is able to learn relatively easily (through instruction). Usually has less patience than hardcore gamers and are less likely to carry through and finish a game. Additionally are not afraid to seek out "help" and are more likely to search through FAQs or instruction manuals to ensure their experience proceeds unhindered.


==="Hardcore" Gamer===

Jimmy Hardcore

Profile:  Jimmy loves his RPGs (role-playing games).  His favourite franchise is Final Fantasy and has played and beaten Final Fantasy Tactics.  He owns a PC, a PS2 and wishes he could afford a PS3.  Jimmy likes to find every single item and ability in a game before putting it away, so he usually doesn't buy many games.  He recently noticed a post on a gaming website for the open-source game "SymTac" and thought he'd give it a try (since it's free).
  
??Goals: To complete a video game in the shortest time, with the most skills and abilities they can amass. Wish to do the absolute best in a game, before others, and without aid or outside influence. Dedicate large consecutive hours towards a game not only until the game is finished, but also only until they have assured themselves they have done everything, and have "spec'd" (made the abilities of their character the most potent). Even then "Hardcore" gamers may stick around to show off their skills. ???

Abilities: Generally have an encyclopedic knowledge of the game and it's minute facets. Having studied previous games in the series, and likely, having played other games in the genre, consider themselves specialists and elite. Have a low tolerance for hindrance, bugs or general slow downs in a game. Usually have little to no care about the plot, as it is only a means to an ends in the game.

 
==="Newbie" Gamer===

(newbie means a player new to the genre, game or both)

Ida gamahata
_(pronounced I-duh game-a hate-a)_

Profile:  Ida is a thirty-something who works as an accountant at ABC Accounting firm in San Frasisco, CA.  The extenet to which she uses her computer for leisure is usually solitare and minesweeper.  However, a friend recently introduced her to Sim City, which she enjoyed, and her geeky friend pointed her to the open-source game "SymTac", which she has decided to try.  
She has a short time and attention span for such a seemingly "hardcore game" and the game roughly has 30-60 minutes to convince her that it's worth her time.

Goals: To learn a new game and to try and gain experience in how it works and what are the best options. Generally unconcerned about asking for information, they wish only to gain the best experience with the software at hand. Generally Newbie's have high expectations of games and hope to become better at them through time. 

Abilities: Usually have a strong sense of enthusiasm and start at a game with great gusto. Additionally, they are more likely to try out new things, and question how the game works as a whole. Their best abilities (in testing purposes) is their relatively new nature to the game, which gives great insight into UI and game design through their interactions with the game.


==Short list of Use Cases==

Attacking/Moving: ALL

Entering Text: ALL

Load Profile: ALL

New Profile: ALL

Status: Hardcore

Item Buying: Not Newbie

Equipping: Not Newbie

Setting Options: ALL

Save (from Map): ALL

Load (from Map): ALL

New Game: ALL

Quitting (from Map): ALL

Party Options: Not Newbie

Main Map: ALL

== Use Case Map ==

http://www.sfu.ca/~mmalyuk/275/Flow.png

=FINAL=
Overview: This scenario will cover the basics of playing the game

*Name:* Name and Password

*Description:* The user must enter a name and password when creating a profile.

*Actors:* ALL

*Use Case:*

=== ===
_ALL:_

Normal:

1. Type:  Characters into text field

Alternative:

1. Joypad: To select characters

2. Selection: “Ok” when finished, text affirms decision with yes or no.

3. Affirmation: User selects Yes, if no, go to 1.

Abnormal:

2 ii) Erasing: User uses backspacing or selects backspacing to remove characters.

*Features Used:*
  * Selection Cursor
  * Text box
  * Button (affirmation yes or no, and ok)
*Exceptions:*
  * If the user does not enter a name, the screen will respond with a message to the user, indicating they should.

*Screen Mockups:*

=== === 
*Name:* Load Profile

*Description:* The user loads a previously saved profile

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary:

1. Selection: Move the cursor to “Load Profile”

2. Selection: Move cursor over player profile with user's name

3. Text Entry: Write password in password box

Abnormal 1:

1. Selection: Move the cursor to “Load Profile”

2. Selection: Move cursor over player profile with user's name

3. Text Entry: Write password in password box

4. Wrong Entry: User is notified, writes again

Abnormal 2:

1. Selection: Move the cursor to “Load Profile”

2. Selection: Move cursor over player profile with user's name

3. Selection: Select Cancel, if the user selects incorrect profile

4. Text Entry: Write password in password box

*Features Used:*
  * Selection Cursor
  * Menu
  * Button

*Exceptions:*
  * Incorrect password entry, rectified by allowing the user to enter again
  * Incorrect selection of profile, rectified by allowing the user to “cancel” entry.

*Screen Mockups:*

=== ===

*Name:* Main Options

*Description:* The user accesses the Options Menu (before game)

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary:

1. Selection: Move the cursor to Options and enter

2. Selection: Select volume bar, move to left for less or right for more.

3. Validate: Select Apply Changes.

Abnormal 1:

1. Selection: Move the cursor to Options and enter

2. Selection: Select volume bar, move to left for less or right for more.

3. Reset: User makes an error, selects “use defaults”

*Features Used:*

  * Selection Cursor
  * Menu
  * Button
*Exceptions:*

  * Incorrect volume, allow user to reset to defaults

*Screen Mockups:*

=== ===

*Name:* Start a New Game

*Description:* The user must start a new instance of the game.

*Actors:* ALL

*Use Case:*

=== ===
_ALL:_

Normal:

1. Selection: Move the cursor to “New Game”

2. Start: Use enter to start the game.

*Features Used:*

  * Selection Cursor

  * Menu

  * Button

*Exceptions:*

   N/A

*Screen Mockups:*

=== ===

*Name:* Playing Tutorial

*Description:* The user must start the tutorial mode

*Actors:* Newbie/Casual

*Use Case:*

=== ===
_Newbie/Casual:_

1. Selection: Move the cursor to “Tutorial”

2. Start: Use enter to start the tutorial.

*Features Used:*

  * Selection Cursor
  * Menu
  * Button
*Exceptions:*

   N/A

*Screen Mockups:*

=== ===

*Name:* Load Game

*Description:* The user selects their saved game

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary:

1. Selection: Move the cursor to Load game and Enter

2. Selection: Select preferred saved game.

3. Validate: User accepts when asked if this is the game they wish to load

Abnormal 1:

1. Selection: Move the cursor to Load game and Enter

2. Selection: Select preferred saved game.

3. Validate: User denies when asked if this is the game they wish to load

4. Selection: User is returned to load menu, and may select again.

*Features Used:*

  * Selection Cursor
  * Menu
  * Button
*Exceptions:*

  * Incorrect save game, allow user to go back before finalizing choice

*Screen Mockups:*

=== ===


*Name:* Navigating the World Map

*Description:* The user must navigate a map, and enter an item shop (marketplace/armory)

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

1. Selection: Move the cursor to toward a city

2. Movement: By selecting the node, the character will move to this point 

3. Menu: Press "M" to bring up the menu.

4. Selection: Navigate menu to "Armoury/Marketplace"(whichever is there) and enter.

Abnormal:

1. Selection: User selects node that does not contain a city

2. Movement: Player moves to position

3. Menu: Pressing "M" brings up the menu.

4. Unselectable: Menu does not allow selection of Armoury or Marketplace.

5. Movement: Player moves until they are on a city.

Abnormal 2:

1. Selection. User selects an area on the map where no nodes or roads exist

2. Movement: No movement occurs until a valid movement is proposed.

*Features Used:*

  * Selection Cursor
  * Button
  * Menu

*Exceptions:*

  * Choosing the wrong position (movement but no marketplace or armoury present or selectable)
  * Choosing an invalid position (no movement)

*Screen Mockups:*

=== ===


*Name:* Using Marketplace

*Description:* The user must utilize the menu list to buy items for their units.

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

1. Selection: Move the cursor to select the type of weapon/spell/armor needed (Sword/Axe/Shield/Spell etc.)

2. Selection: Press the selection button on desired object.

3. Selection: Affirm selection with another button press. (item placed in repository)

4. Exit: Select exit option, press button.

Alternate:

1. Selection: Move the cursor to sell and select

2. Selection: Select the item from your repository with button press.

3. Selection: Affirm selection with another button press. (item removed from repository money given back)

Abnormal 1:

1. Selection: User selects an item they cannot afford (greyed out)

2. Selection: Game informs user, item is too expensive. Must select again.

*Features Used:*

  * Selection Cursor
  * Button
  * Menu

*Exceptions:*

  * Choosing the wrong item (error message generated)

*Screen Mockups:*

=== ===

*Name:* Accessing party status

*Description:* The user must navigate the world map menu to access party status.

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

1. Selection: Press the "M" button to bring up the menu

2. Selection: Navigate to the "Party Status" button, and press the button.

Abnormal:

1. Selection: User selects menu item that is not Party Status

2. Selection: Select back or cancel, and go back to menu. Try again.

*Features Used:*

  * Selection Cursor
  * Button
  * Menu
*Exceptions:*

  * Choosing the wrong option (go back and try again)

*Screen Mockups:*

=== === 
Party status: --branch--

  * Setting party members
  * Setting weapons

*Name:* Party Status

*Description:* The user must be able to set their starting member roster, and equip their units with items.

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Case Party Setup:

1. Selection: Move the cursor onto a unit and press button

2. Selection: In sub menu, select option (Include in party)

Abnormal:

1. Selection: User selects too many to be in party

2. Selection: User receives warning message, that too many members are in party, to either de-select a member or not add a new one.

3. Selection: Do nothing if not adding, otherwise, select a character that is in party (noted by highlight) and press button.

4. Selection: In sub menu, select option (remove from party).
  * _Note if the user tries to remove all members from party a similar warning will be produced to warn them_

Case Unit Item Selection:

1. Selection: Move the cursor onto a unit and press button

2. Selection: In sub menu, select option (Set Items)

3. Selection: From items menu, select the item you wish to change (from the unit), with the item you wish to use (from the repository).

*Features Used:*

  * Selection Cursor
  * Menu
  * Items
  * Button

*Exceptions:*

  * Choosing too many or too few party members (error message generated)

*Screen Mockups:*

=== ===

*Name:* Entering Battle

*Description:* The user must navigate a map, and join (move to) a conflict denoted by a red mark.

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

1. Selection: Move the cursor to toward the contested point

2. Movement: By selecting the node, the character will move to this point 

Abnormal:

1. Selection: User selects node that is not contested

2. Movement: No action results, user continues movement

3. Arrival: When arriving at the correct node, the instance will start.

Abnormal 2:

1. Selection: User selects an area on the map where no nodes or roads exist

2. Movement: No movement occurs until a valid movement is proposed.

*Features Used:*

  * Selection Cursor
*Exceptions:*

  * Choosing the wrong position (movement but no instance)
  * Choosing an invalid position (no movement and no instance)

*Screen Mockups:*

=== ===

*Name:* In Game Status

*Description:* The user must enter the in Game Status menu, view current statistics of units

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

1. Selection: Press the "S" button

2. Selection: Side menu shows listing of all characters on field with basic info. Selecting a unit brings up submenu.

3. Selection: Submenu displays further information, button press exits menu


*Features Used:*

  * Selection Cursor
  * Menu (s button)
  * Button
*Exceptions:*

  N/A

*Screen Mockups:*

=== ===

*Name:* Moving (tutorial)

*Description:* The user must navigate the tactical map, aided by the tutorial mechanism

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary Usage:

1. Selection: Select an allied character

2. Movement: Move the cursor within the movement range of the character (denoted by bordered box)

3. Commit: Use the action button to move the unit to the spot at the cursor.

Abnormal 1:

1. Selection: Selecting ground

2. Selection: User cannot select ground, only allowed to select unit

Abnormal 2:

1. Selection: Select an allied character.

2. Movement: Move character outside the allowable movement area (not allowed).

*Features Used:*

  * Selection Cursor
  * Action button

*Exceptions:*

  * Selecting ground (no effect)
  * Trying to move to invalid position (restricted to movement area of unit only)

*Screen Mockups:*

=== ===

*Short Name:* Attacking

*Informal Description:* During the course of the game, the user will have to be able to get their character into a position where they may attack an opponent character.

*Actors:* ALL

*Use Cases:* 

=== ===

_Casual Gamer:_ 

1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over opponent before accepting.

3. Selects Weapon: Player navigates menu, selects appropriate weapon.

4. Attacks: Player affirms attack action.

=== ===

_"Hardcore" Gamer:_

1. Check Skills: Player checks character statistics before choosing target.

2. Check Opponent Skills: Player checks opponent statistics by placing cursor over opposing character.

3. Selection: Deciding it is a good move, player selects his/her own character.

4. Choose Target: Selects character he/she planned to attack with cursor.

5. Selects Weapon: Player navigates menu, selects appropriate weapon.

6. Attacks: Player affirms attack action.

=== ===

_"Newbie" Gamer_:

Ordinary:

1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over opponent before accepting.

3. Selects Weapon: Player navigates menu, selects appropriate weapon.

4. Attacks: Player affirms attack action.

Abnormal 1:

1. Selection: Player selects a unit not their own

2. Re-Selection: Interface does not allow selection of opposing units, player reselects

3-5 Continue as normal

Abnormal 2:

1. Selection: Player selects his/her own unit

2. Choose Target: Player uses cursor and places it over ally or blank ground.

Stem: 

3i: Player has selected ground, this will only be allowed if attack is Area of Effect (attack damages more than one space, and may still be effective)

3ii: Player has selected ally, attack will only be allowed if "healing".

4-5 Continue as normal

=== ===

*Features Used:*

  * Cursor (and associated controls)
  * Selection button
  * Information button
  * Details menu
  * Weapons menu
  * Weapon/Spell

*Exceptions:*
  * If a user selects the wrong unit or a unit who has already had it's turn, the game will not allow selection. 
  * If a user tries to attack an ally, it will only be allowed if a healing ability if invalid, will wait until user selects proper target
  * If a user tries to attack ground, it will only be allowed for an area of effect attack if invalid, will wait until user selects proper target
  * Unusable weapons for selection will be greyed out, and attempts to use these weapons will not be allowed, waits for proper input.

*Screen Mockup*

=== ===

*Name:* Saving

*Description:* Once the battle has ended, the user must save from the overmap

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary Usage:

1. Menu: Access the menu by pressing “M”

2. Selection: Select the save option

3. Selection: In the save menu select an empty space.

Abnormal Usage:

1. Menu: Access the menu by pressing “M”

2. Selection: Select the save option

3. Selection: Select already in use save slot

4. Input: Answer with button on Yes overwrite or No do not.

Abnormal Usage 2:

1. Menu. Access the menu by pressing “M”

2. Selection: Select improper action.

3. Selection: Choose cancel and go back to main menu.

4. Selection: Select proper option.

5. Selection: In the save menu select an empty space.

=== ===

*Features Used:*

  * Selection Cursor
  * Action button
  * World Map Menu
*Exceptions:*

  * Selecting improper button (simply go back and choose correct)
  * Overwriting files (ask if they are sure)

*Screen Mockups:*

=== ===

*Name:* Quitting

*Description:* The user wishes to exit the game from the main map

*Actors:* ALL

*Use Case:*

=== ===

_ALL:_

Ordinary Usage:

1. Menu: Press “M” to access the menu.

2. Selection: Select the quit option.

3. Selection: Select Yes when asked if they are sure.

Abnormal Usage:

1. Menu: Press “M” to access the menu.

2. Selection: Select the quit option.

3. Mistake: Select No to go back to game.

=== ===

*Features Used:*

  * Selection Cursor
  * Action button
  * World Map menu

*Exceptions:*

  * Selecting No, back to map

*Screen Mockups:*

=== ===
